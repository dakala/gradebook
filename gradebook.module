<?php

/**
 * @file
 * Allows users to manage grades.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function gradebook_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.gradebook':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Gradebook suite of modules allows users to manage <em>grade books</em> ...') . '</p>';

      return $output;

    case 'entity.grade_letter_set.canonical':
    case 'grade_letter.set_add':
    case 'entity.grade_letter_set.edit_form':
      return '<p>' . t('TODO: gradebook_help() ...') . '</p>';
  }
}

/**
 * Implements hook_grade_valuation_info().
 */
function gradebook_grade_valuation_info() {
  return [
    'numeric' => [
      'label' => 'Numeric',
      'description' => t('The grade is represented by a number.'),
      'widget_callback' => '',
    ],
    'string' => [
      'label' => 'String',
      'description' => t('The grade is a textual feedback only.'),
      'widget_callback' => '',
    ],
    'scale' => [
      'label' => 'Scale',
      'description' => t('The grade is a value from a pre-defined scale.'),
      'widget_callback' => '',
    ]
  ];
}

/**
 *
 * @return array
 */
function gradebook_grade_valuation_options() {
  $options = [];
  $valuations = \Drupal::moduleHandler()->invokeAll('grade_valuation_info');
  foreach ($valuations as $key => $valuation) {
    $options[$key] = $valuation['label'];
  }
  asort($options);
  return $options;
}
