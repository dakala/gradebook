<?php

/**
 * @file
 * Allows users to manage grades.
 */

use Drupal\Core\Cache\Cache;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

define('GRADE_ITEM_VALUATION_NUMERIC', 'numeric');
define('GRADE_ITEM_VALUATION_STRING', 'string');

/**
 * Implements hook_help().
 */
function gradebook_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.gradebook':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Gradebook suite of modules allows users to manage <em>grade books</em> ...') . '</p>';

      return $output;

    case 'entity.grade_letter_set.canonical':
    case 'grade_letter.set_add':
    case 'entity.grade_letter_set.edit_form':
      return '<p>' . t('TODO: gradebook_help() ...') . '</p>';
  }
}

/**
 * Implements hook_grade_valuation_info().
 */
function gradebook_grade_valuation_info() {
  return [
    'numeric' => [
      'label' => 'Numeric',
      'description' => t('The grade is represented by a number.'),
      'widget_callback' => '',
    ],
    'string' => [
      'label' => 'String',
      'description' => t('The grade is a textual feedback only.'),
      'widget_callback' => '',
    ],
    'scale' => [
      'label' => 'Scale',
      'description' => t('The grade is a value from a pre-defined scale.'),
      'widget_callback' => '',
    ]
  ];
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Adds group options to the node type form.
 *
 * @see NodeTypeForm::form().
 * @see sug_form_node_type_form_submit().
 */
function gradebook_form_node_type_form_alter(&$form, FormStateInterface $form_state) {
  // @todo: attach behaviour
  $form['gradebook'] = array(
    '#type' => 'details',
    '#title' => t('Gradebook'),
    '#group' => 'additional_settings',
  );

  $form['gradebook']['gradebook_node_type'] = array(
    '#type' => 'checkbox',
    '#title' => t('Enable grading.'),
    '#default_value' => \Drupal::service('group.manager')->isGradebookEnabled($form_state->getFormObject()->getEntity()->id()),
    '#description' => t('Content will be included in relevant Gradebook actions.'),
  );

  $form['#submit'][] = 'gradebook_form_node_type_form_submit';
}

/**
 * Submit callback for the node type form to save the gradebook settings.
 */
function gradebook_form_node_type_form_submit($form, FormStateInterface $form_state) {
  \Drupal::configFactory()->getEditable('gradebook.settings')->set(
    'gradebook_entity.' . $form_state->getFormObject()->getEntity()->id(),
    $form_state->getValue('gradebook_node_type'))->save();
}
