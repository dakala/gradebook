<?php

/**
 * @file
 * Allows users to manage grade scales.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Render\Element;

const GRADE_ITEM_VALUATION_SCALE = 'scale';

/**
 * Implements hook_help().
 */
function grade_scale_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.grade_scale':
      $output = '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Grade Scale module allows users to create ...') . '</p>';
     return $output;

    case 'entity.grade_scale.collection':
      return '<p>' . t('Grade scales are ...') . '</p>';
  }
}


/**
 * Implements hook_theme().
 */
function grade_scale_theme() {
  return array(
    'grade_scale' => array(
      'render element' => 'elements',
    ),
  );
}


/**
 * Implements hook_theme_suggestions_HOOK().
 */
function grade_scale_theme_suggestions_grade_scale(array $variables) {
  $suggestions = array();
  $grade_scale = $variables['elements']['#grade_scale'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'grade_scale__' . $sanitized_view_mode;
  $suggestions[] = 'grade_scale__' . $grade_scale->id();
  $suggestions[] = 'grade_scale__' . $grade_scale->id() . '__' . $sanitized_view_mode;

  return $suggestions;
}

/**
 * Prepares variables for node templates.
 *
 * Default template: node.html.twig.
 *
 * Most themes use their own copy of node.html.twig. The default is located
 * inside "/core/modules/node/templates/node.html.twig". Look in there for the
 * full list of variables.
 *
 * @param array $variables
 *   An associative array containing:
 *   - elements: An array of elements to display in view mode.
 *   - node: The node object.
 *   - view_mode: View mode; e.g., 'full', 'teaser', etc.
 */
function template_preprocess_grade_scale(&$variables) {
  $variables['view_mode'] = $variables['elements']['#view_mode'];

  $variables['grade_scale'] = $variables['elements']['#grade_scale'];
  /** @var \Drupal\grade_scale\GradeScaleInterface $grade_scale */
  $grade_scale = $variables['grade_scale'];
  
  $variables['date'] = drupal_render($variables['elements']['created']);
  unset($variables['elements']['created']);
  $variables['author_name'] = drupal_render($variables['elements']['uid']);
  unset($variables['elements']['uid']);

  $variables['label'] = $variables['elements']['title'];
  unset($variables['elements']['title']);
  // Helpful $content variable for templates.
  $variables += array('content' => array());
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function grade_scale_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'grade_item') {
    $fields['grade_scale'] = BaseFieldDefinition::create('entity_reference')
      ->setLabel(t('Scale'))
      ->setDescription(t('The scale to use when grading, if applicable.'))
      ->setName('grade_scale')
      ->setProvider('grade_scale')
      ->setTargetEntityTypeId('grade_item')
      ->setRevisionable(TRUE)
      ->setSetting('target_type', 'grade_scale')
      ->setTranslatable(TRUE)
      ->setDisplayOptions('view', array(
        'label' => 'above',
        'weight' => 16,
      ))
      ->setDisplayConfigurable('view', TRUE)
      ->setDisplayOptions('form', array(
        'type' => 'entity_reference_autocomplete',
        'weight' => -16,
        'settings' => array(
          'match_operator' => 'CONTAINS',
          'size' => '60',
          'placeholder' => '',
        ),
      ))
      ->setDisplayConfigurable('form', TRUE);
  }
}

/**
 * Implements hook_grade_valuation_info().
 */
function grade_scale_grade_valuation_info() {
  return [
  GRADE_ITEM_VALUATION_SCALE => [
    'label' => 'Scale',
    'description' => t('The grade is a value from a pre-defined scale.'),
    'widget_callback' => '',
  ]
  ];
}
